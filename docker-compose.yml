version: "3"

# add supervisor, redis

services:

  webserver:
    container_name: webserver
    image: nginx:stable-alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    working_dir: /var/www/app
    volumes:
      - .:/var/www/app
      - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx
    networks:
      - internal

  php-fpm:
    container_name: php-fpm
    build:
      context: .
      dockerfile: ./.docker/php-fpm/Dockerfile
    restart: always
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    working_dir: /var/www/app
    volumes:
      - .:/var/www/app
      - ./.docker/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
      - ./.docker/php-fpm/php.ini:/usr/local/etc/php/php.ini
      - ./.docker/php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    networks:
      - internal

  memcached:
    container_name: memcached
    image: memcached
    restart: always
    ports:
      - 11211:11211
    networks:
      - internal

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - ./.docker/rabbitmq/etc:/etc/rabbitmq/
      - ./.docker/rabbitmq/data:/var/lib/rabbitmq/
      - ./logs/rabbitmq:/var/log/rabbitmq/log/
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: example
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - internal

  mysql:
    container_name: mysql
    image: mysql:5.7.31
    working_dir: /var/www/app
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./.docker/mysql/data:/var/lib/mysql
      - ./.docker/mysql:/etc/mysql/conf.d
      - ./logs/mysql:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: example
    networks:
      - internal

  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./.docker/mongodb/mongod.conf:/etc/mongod.conf
      - ./.docker/mongodb/initdb.d:/docker-entrypoint-initdb.d/
      - ./.docker/mongodb/data:/data/db/
      - ./logs/mongodb:/var/log/mongodb/
    networks:
      - internal

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    links:
      - mysql
      - mongodb
    volumes:
      - ./.docker/adminer/adminer.css:/var/www/html/adminer.css
    networks:
      - internal

  elasticsearch:
    image: elasticsearch:7.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=example
    volumes:
      - ./.docker/elasticsearch/data:/usr/share/elasticsearch/data
      - ./logs/elasticsearch:/var/log/elasticsearch
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    image: kibana:7.9.0
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - KIBANA_ELASTICSEARCH_URL=elasticsearch
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=example

networks:
  internal:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.220.0/28